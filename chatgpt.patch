diff --git a/src/js/main.mjs b/src/js/main.mjs
index 34a2a6e321bb05878f84656a708373db5a34858a..430f83e4076584490c54ce8fdfa1f07729b7a494 100644
--- a/src/js/main.mjs
+++ b/src/js/main.mjs
@@ -471,50 +471,51 @@ function updateScenarioOptions(selectId, electricEnabled, hydraulicEnabled) {
       if (first) selectEl.value = first.value;
     }
     selectEl.dispatchEvent(new Event('change', { bubbles: true }));
   }
 }
 
 // ---- Core compute + render ----
 function computeAll() {
   const errBox = /** @type {HTMLElement|null} */ (document.getElementById('err'));
   const status = /** @type {HTMLElement|null} */ (document.getElementById('status'));
   if (errBox) errBox.textContent = '';
   if (status) status.textContent = 'computingâ€¦';
 
   try {
     // Geometry & load inputs
     const wraps_override_input = read('wraps_override');
     const wraps_per_layer_override = (
       Number.isFinite(wraps_override_input) && wraps_override_input > 0
     ) ? wraps_override_input : undefined;
 
     const cfg = {
       cable_dia_mm: read('c_mm'),
       operating_depth_m: read('depth_m'),
       dead_end_m: read('dead_m'),
       core_dia_in: read('core_in'),
+      flange_dia_in: read('flange_dia_in'),
       flange_to_flange_in: read('ftf_in'),
       lebus_thk_in: read('lebus_in'),
       packing_factor: read('pack'),
       wraps_per_layer_override
     };
     const payload_kg = read('payload_kg');
     const cable_w_kgpm = read('c_w_kgpm');
 
     const rated_speed_mpm = read('rated_speed_mpm');
     const rated_swl_kgf = read('rated_swl_kgf');
     const system_efficiency = read('system_efficiency');
 
     updateMinimumSystemHp(rated_speed_mpm, rated_swl_kgf, system_efficiency);
 
     const positiveOr = (value, fallback) => (Number.isFinite(value) && value > 0 ? value : fallback);
 
     // Shared drivetrain
     const gr1 = positiveOr(read('gr1'), 1);
     const gr2 = positiveOr(read('gr2'), 1);
     const motors = positiveOr(read('motors'), 1);
     const denom_mech = gr1 * gr2 * motors;
 
     const electricEnabled = driveModeEnabled('electric');
     const hydraulicEnabled = driveModeEnabled('hydraulic');
 
